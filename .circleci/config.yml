version: 2
jobs:
    build:
        docker:
            - image: circleci/node:8.12

        steps:
            - checkout

            - restore_cache:
                  keys:
                      - v1-{{ checksum "frontend/package.json" }}

            - run:
                  name: Install npm packages
                  command: |
                      cd frontend
                      yarn

            - save_cache:
                  paths:
                      - frontend/node_modules
                  key: v1-{{ checksum "frontend/package.json" }}

            - run:
                  name: Build
                  command: |
                      cd frontend
                      yarn run generate

            - persist_to_workspace:
                  root: .
                  paths:
                      - .

    lambda_test:
        docker:
            - image: circleci/python:3.6.4

        steps:
            - checkout

            - run: sudo chown -R circleci:circleci /usr/local/bin
            - run: sudo chown -R circleci:circleci /usr/local/lib/python3.6/site-packages

            - restore_cache:
                  keys:
                      - v1-{{ checksum "lambda/requirements.txt" }}

            - run:
                  name: Install pip packages
                  command: |
                      cd lambda
                      sudo pip install -r requirements.txt

            - save_cache:
                  paths:
                      - '/usr/local/lib/python3.6/site-packages'
                  key: v1-{{ checksum "lambda/requirements.txt" }}

            - run:
                  name: Run python tests
                  command: |
                      cd lambda
                      python test.py

    deploy-frontend:
        docker:
            - image: cdssnc/aws-cli

        steps:
            - checkout

            - attach_workspace:
                  at: .

            - deploy:
                  name: Deploy web page
                  command: |
                      cd frontend
                      ./deploy_to_s3.sh

    deploy-serverless:
        docker:
            - image: shinsukeabe/circleci-serverless-python3

        steps:
            - checkout

            - restore_cache:
                  keys:
                      - v1-{{ checksum "lambda/package-lock.json" }}

            - run:
                  name: Install packages
                  command: |
                      cd lambda
                      npm install --save serverless-python-requirements serverless-prune-plugin serverless-apigw-binary

            - save_cache:
                  paths:
                      - lambda/node_modules
                  key: v1-{{ checksum "lambda/package-lock.json" }}

            - run:
                  name: Deploy lambda function in production environment
                  command: |
                      cd lambda
                      serverless deploy -v -s prod

workflows:
    version: 2
    build-and-deploy:
        jobs:
            - build
            - lambda_test

            - deploy-frontend:
                  requires:
                      - build
                      - lambda_test
                  filters:
                      branches:
                          only: master

            - deploy-serverless:
                  requires:
                      - build
                      - lambda_test
                  filters:
                      branches:
                          only: master
